extra-files: [
  [
    "md5=026b31e1df290373198373d5aaa26e42"
    "bGliOlsKICAiTUVUQS5zZXEiIHsiTUVUQSJ9Cl0K"
  ]
  [
    "md5=3cddbf72164c29d4e50e077a92a37c6c"
    "ZGlmZiBhL2NvbmZpZ3VyZSBiL2NvbmZpZ3VyZQotLS0gYS9jb25maWd1cmUKKysrIGIvY29uZmlndXJlCkBAIC0yOTQsNyArMjk0LDcgQEAKICAgICAjIElmIGZpbmRsaWIgaGFzIGJlZW4gY29uZmlndXJlZCAtc2l0ZWxpYiAkKG9jYW1sYyAtd2hlcmUpIHRoZW4gdGhlcmUncwogICAgICMgbm90aGluZyB0byBkbywgYnV0IG90aGVyd2lzZSB3ZSBuZWVkIHRvIHB1dCBPQ2FtbCdzIFN0YW5kYXJkIExpYnJhcnkKICAgICAjIGludG8gdGhlIHBhdGggc2V0dGluZy4KLSAgICBpZiBbICEgLWUgIiR7b2NhbWxfc2l0ZWxpYn0vc3RkbGliL01FVEEiIF07IHRoZW4KKyAgICBpZiBbICEgLWUgIiR7b2NhbWxfc2l0ZWxpYn0vc3RkbGliLmNtaSIgXTsgdGhlbgogICAgICAgICBvY2FtbHBhdGg9IiR7b2NhbWxfY29yZV9zdGRsaWJ9JHtwYXRoX3NlcH0ke29jYW1scGF0aH0iCiAgICAgZmkKIGZpCg=="
  ]
  [
    "md5=8e50c5e2517d3463b3aad649748cafd7"
    "c2hhcmU6IFsiZ2VuX29jYW1sX2NvbmZpZy5tbCJdCg=="
  ]
  [
    "md5=b33c8a1a6c7ed797816ce27df4855107"
    "bmFtZT0ic2VxIgp2ZXJzaW9uPSJbZGlzdHJpYnV0ZWQgd2l0aCBPQ2FtbCA0LjA3IG9yIGFib3ZlXSIKZGVzY3JpcHRpb249ImR1bW15IGJhY2t3YXJkLWNvbXBhdGliaWxpdHkgcGFja2FnZSBmb3IgaXRlcmF0b3JzIgpyZXF1aXJlcz0iIgo="
  ]
  [
    "md5=c0a50fb1f6ffe7a48bf8600e83ae6d38"
    "bGV0ICgpID0KICBsZXQgb2NhbWxfdmVyc2lvbiA9CiAgICBsZXQgdiA9IFN5cy5vY2FtbF92ZXJzaW9uIGluCiAgICBsZXQgbCA9IFN0cmluZy5sZW5ndGggdiBpbgogICAgbGV0IHBsdXMgPSB0cnkgU3RyaW5nLmluZGV4IHYgJysnIHdpdGggTm90X2ZvdW5kIC0+IGwgaW4KICAgICgqIEludHJvZHVjZWQgaW4gNC4xMS4wOyB1c2VkIGZyb20gNC4xMi4wICopCiAgICBsZXQgdGlsZGUgPSB0cnkgU3RyaW5nLmluZGV4IHYgJ34nIHdpdGggTm90X2ZvdW5kIC0+IGwgaW4KICAgIFN0cmluZy5zdWIgdiAwIChtaW4gKG1pbiBwbHVzIHRpbGRlKSBsKQogIGluCiAgaWYgb2NhbWxfdmVyc2lvbiA8PiBTeXMuYXJndi4oMSkgdGhlbgogICAgKFByaW50Zi5lcHJpbnRmCiAgICAgICAiT0NhbWwgdmVyc2lvbiBtaXNtYXRjaDogJSVzLCBleHBlY3RlZCAlcyIKICAgICAgIG9jYW1sX3ZlcnNpb24gU3lzLmFyZ3YuKDEpOwogICAgIGV4aXQgMSkKICBlbHNlCiAgbGV0IG9jID0gb3Blbl9vdXQgKFN5cy5hcmd2LigyKSBeICIuY29uZmlnIikgaW4KICBsZXQgZXhlID0gIi5leGUiIGluCiAgbGV0IChvY2FtbCwgc3VmZml4KSA9CiAgICBsZXQgcyA9IFN5cy5leGVjdXRhYmxlX25hbWUgaW4KICAgIGlmIEZpbGVuYW1lLmNoZWNrX3N1ZmZpeCBzIGV4ZSB0aGVuCiAgICAgIChGaWxlbmFtZS5jaG9wX3N1ZmZpeCBzIGV4ZSwgZXhlKQogICAgZWxzZQogICAgICAocywgIiIpCiAgaW4KICBsZXQgb2NhbWxjID0gb2NhbWxeImMiXnN1ZmZpeCBpbgogIGxldCBsaWJkaXIgPQogICAgaWYgU3lzLmNvbW1hbmQgKG9jYW1sY14iIC13aGVyZSA+IHdoZXJlIikgPSAwIHRoZW4KICAgICAgKCogTXVzdCBiZSBvcGVuZWQgaW4gdGV4dCBtb2RlIGZvciBXaW5kb3dzICopCiAgICAgIGxldCBpYyA9IG9wZW5faW4gIndoZXJlIiBpbgogICAgICBsZXQgciA9IGlucHV0X2xpbmUgaWMgaW4KICAgICAgY2xvc2VfaW4gaWM7IHIKICAgIGVsc2UKICAgICAgZmFpbHdpdGggIkJhZCByZXR1cm4gZnJvbSAnb2NhbWxjIC13aGVyZSciCiAgaW4KICBsZXQgc3R1YnNkaXIgPQogICAgbGV0IGljID0gb3Blbl9pbiAoRmlsZW5hbWUuY29uY2F0IGxpYmRpciAibGQuY29uZiIpIGluCiAgICBsZXQgcmVjIHIgYWNjID0gdHJ5IHIgKGlucHV0X2xpbmUgaWM6OmFjYykgd2l0aCBFbmRfb2ZfZmlsZSAtPiBhY2MgaW4KICAgIGxldCBsaW5lcyA9IExpc3QucmV2IChyIFtdKSBpbgogICAgY2xvc2VfaW4gaWM7CiAgICBsZXQgc2VwID0gaWYgU3lzLm9zX3R5cGUgPSAiV2luMzIiIHRoZW4gIjsiIGVsc2UgIjoiIGluCiAgICBTdHJpbmcuY29uY2F0IHNlcCBsaW5lcwogIGluCiAgbGV0IGhhc19uYXRpdmVfZHlubGluayA9CiAgICBsZXQgY2hlY2tfZGlyIGxpYmRpciA9CiAgICAgIFN5cy5maWxlX2V4aXN0cyAoRmlsZW5hbWUuY29uY2F0IGxpYmRpciAiZHlubGluay5jbXhhIikKICAgIGluCiAgICBMaXN0LmV4aXN0cyBjaGVja19kaXIgW0ZpbGVuYW1lLmNvbmNhdCBsaWJkaXIgImR5bmxpbmsiOyBsaWJkaXJdCiAgaW4KICBsZXQgcCBmbXQgPSBQcmludGYuZnByaW50ZiBvYyAoZm10IF5eICJcbiIpIGluCiAgcCAib3BhbS12ZXJzaW9uOiBcIjIuMFwiIjsKICBwICJ2YXJpYWJsZXMgeyI7CiAgcCAiICBuYXRpdmU6ICUlYiIKICAgIChTeXMuZmlsZV9leGlzdHMgKG9jYW1sXiJvcHQiXnN1ZmZpeCkpOwogIHAgIiAgbmF0aXZlLXRvb2xzOiAlJWIiCiAgICAoKiBUaGUgdmFyaWFibGUgW29jYW1sY10gYWxyZWFkeSBoYXMgYSBzdWZmaXggb24gV2luZG93cwogICAgICAgKGV4LiAnLi4uXGJpblxvY2FtbGMuZXhlJykgc28gd2UgdXNlIFtvY2FtbF0gdG8gY2hlY2sgKikKICAgIChTeXMuZmlsZV9leGlzdHMgKG9jYW1sXiJjLm9wdCJec3VmZml4KSk7CiAgcCAiICBuYXRpdmUtZHlubGluazogJSViIgogICAgaGFzX25hdGl2ZV9keW5saW5rOwogIHAgIiAgc3R1YnNkaXI6ICUlUyIKICAgIHN0dWJzZGlyOwogIHAgIiAgcHJlaW5zdGFsbGVkOiAle29jYW1sLXN5c3RlbTppbnN0YWxsZWR9JSI7CiAgcCAiICBjb21waWxlcjogXCIle29jYW1sLXN5c3RlbTppbnN0YWxsZWQ/c3lzdGVtOn0lJXtvY2FtbC1iYXNlLWNvbXBpbGVyOnZlcnNpb259JSV7ZGttbC1iYXNlLWNvbXBpbGVyOnZlcnNpb259JSV7b2NhbWwtdmFyaWFudHM6dmVyc2lvbn0lJXtvY2FtbC1vcHRpb24tMzJiaXQ6aW5zdGFsbGVkPyszMmJpdDp9JSV7b2NhbWwtb3B0aW9uLWFmbDppbnN0YWxsZWQ/K2FmbDp9JSV7b2NhbWwtb3B0aW9uLWJ5dGVjb2RlLW9ubHk6aW5zdGFsbGVkPytieXRlY29kZS1vbmx5On0lJXtvY2FtbC1vcHRpb24tZGVmYXVsdC11bnNhZmUtc3RyaW5nOmluc3RhbGxlZD8rZGVmYXVsdC11bnNhZmUtc3RyaW5nOn0lJXtvY2FtbC1vcHRpb24tZnA6aW5zdGFsbGVkPytmcDp9JSV7b2NhbWwtb3B0aW9uLWZsYW1iZGE6aW5zdGFsbGVkPytmbGFtYmRhOn0lJXtvY2FtbC1vcHRpb24tbXVzbDppbnN0YWxsZWQ/K211c2w6fSUle29jYW1sLW9wdGlvbi1ubnA6aW5zdGFsbGVkPytubnA6fSUle29jYW1sLW9wdGlvbi1uby1mbGF0LWZsb2F0LWFycmF5Omluc3RhbGxlZD8rbm8tZmxhdC1mbG9hdC1hcnJheTp9JSV7b2NhbWwtb3B0aW9uLXNwYWNldGltZTppbnN0YWxsZWQ/K3NwYWNldGltZTp9JSV7b2NhbWwtb3B0aW9uLXN0YXRpYzppbnN0YWxsZWQ/K3N0YXRpYzp9JVwiIjsKICBwICJ9IjsKICBjbG9zZV9vdXQgb2MK"
  ]
]
opam-version: "2.0"
roots: [
  "chrome-trace.3.7"
  "dot-merlin-reader.4.10"
  "dune.3.7"
  "dune-action-plugin.3.7"
  "dune-build-info.3.7"
  "dune-configurator.3.7"
  "dune-glob.3.7"
  "dune-private-libs.3.7"
  "dune-rpc.3.7"
  "dune-rpc-lwt.3.7"
  "dune-site.3.7"
  "dyn.3.7"
  "jsonrpc.dev"
  "lsp.dev"
  "merlin.4.10"
  "merlin-lib.4.10"
  "ocaml-lsp-server.dev"
  "ocaml-uideps.dev"
  "ocaml-variants.5.1.0+trunk"
  "ocamlc-loc.3.7"
  "ordering.3.7"
  "stdune.3.7"
  "xdg.3.7"
]
installed: [
  "astring.0.8.5"
  "base-bigarray.base"
  "base-bytes.base"
  "base-domains.base"
  "base-threads.base"
  "base-unix.base"
  "camlp-streams.5.0.1"
  "chrome-trace.3.7"
  "cmdliner.1.2.0"
  "cppo.1.6.9"
  "csexp.1.5.2"
  "dot-merlin-reader.4.10"
  "dune.3.7"
  "dune-action-plugin.3.7"
  "dune-build-info.3.7"
  "dune-configurator.3.7"
  "dune-glob.3.7"
  "dune-private-libs.3.7"
  "dune-rpc.3.7"
  "dune-rpc-lwt.3.7"
  "dune-site.3.7"
  "dyn.3.7"
  "fiber.3.7.0"
  "jsonrpc.dev"
  "lsp.dev"
  "lwt.5.6.1"
  "menhir.20230608"
  "menhirLib.20230608"
  "menhirSdk.20230608"
  "merlin.4.10"
  "merlin-lib.4.10"
  "ocaml.5.1.0"
  "ocaml-config.3"
  "ocaml-lsp-server.dev"
  "ocaml-uideps.dev"
  "ocaml-variants.5.1.0+trunk"
  "ocamlbuild.0.14.2"
  "ocamlc-loc.3.7"
  "ocamlfind.1.9.6"
  "ocamlformat-rpc-lib.0.25.1"
  "ocplib-endian.1.2"
  "odoc-parser.2.0.0"
  "ordering.3.7"
  "pp.1.1.2"
  "ppx_yojson_conv_lib.v0.16.0"
  "re.1.10.4"
  "result.1.5"
  "seq.base"
  "spawn.v0.15.1"
  "stdune.3.7"
  "topkg.1.0.7"
  "uutf.1.0.3"
  "xdg.3.7"
  "yojson.2.1.0"
]
pinned: [
  "chrome-trace.3.7"
  "dot-merlin-reader.4.10"
  "dune.3.7"
  "dune-action-plugin.3.7"
  "dune-build-info.3.7"
  "dune-configurator.3.7"
  "dune-glob.3.7"
  "dune-private-libs.3.7"
  "dune-rpc.3.7"
  "dune-rpc-lwt.3.7"
  "dune-site.3.7"
  "dyn.3.7"
  "jsonrpc.dev"
  "lsp.dev"
  "merlin.4.10"
  "merlin-lib.4.10"
  "ocaml-lsp-server.dev"
  "ocaml-uideps.dev"
  "ocaml-variants.5.1.0+trunk"
  "ocamlc-loc.3.7"
  "ordering.3.7"
  "stdune.3.7"
  "xdg.3.7"
]
package "astring" {
  opam-version: "2.0"
  version: "0.8.5"
  synopsis: "Alternative String module for OCaml"
  description: """\
Astring exposes an alternative `String` module for OCaml. This module
tries to balance minimality and expressiveness for basic, index-free,
string processing and provides types and functions for substrings,
string sets and string maps.

Remaining compatible with the OCaml `String` module is a non-goal. The
`String` module exposed by Astring has exception safe functions,
removes deprecated and rarely used functions, alters some signatures
and names, adds a few missing functions and fully exploits OCaml's
newfound string immutability.

Astring depends only on the OCaml standard library. It is distributed
under the ISC license."""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The astring programmers"
  license: "ISC"
  tags: ["string" "org:erratique"]
  homepage: "https://erratique.ch/software/astring"
  doc: "https://erratique.ch/software/astring/doc"
  bug-reports: "https://github.com/dbuenzli/astring/issues"
  depends: [
    "ocaml" {>= "4.05.0"}
    "ocamlfind" {build}
    "ocamlbuild" {build}
    "topkg" {build}
  ]
  build: ["ocaml" "pkg/pkg.ml" "build" "--pinned" "%{pinned}%"]
  dev-repo: "git+http://erratique.ch/repos/astring.git"
  url {
    src: "https://erratique.ch/software/astring/releases/astring-0.8.5.tbz"
    checksum: "md5=e148907c24157d1df43bec89b58b3ec8"
  }
}
package "base-bigarray" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description: "Bigarray library distributed with the OCaml compiler"
  maintainer: "https://github.com/ocaml/opam-repository/issues"
}
package "base-bytes" {
  opam-version: "2.0"
  version: "base"
  synopsis: "Bytes library distributed with the OCaml compiler"
  maintainer: " "
  authors: " "
  homepage: " "
  depends: [
    "ocaml" {>= "4.02.0"}
    "ocamlfind" {>= "1.5.3"}
  ]
}
package "base-domains" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description:
    "Domains-based parallelism distributed with the Multicore OCaml compiler\""
  maintainer: "https://github.com/ocaml-multicore/multicore-opam/issues"
  depends: [
    "ocaml" {>= "5.0"} |
    "ocaml-variants"
      {= "4.14.0+domains" | = "4.12.0+domains+effects" | = "4.12.0+domains" |
       = "4.10.0+multicore" |
       = "4.10.0+multicore+no-effect-syntax" |
       = "4.06.1+multicore"}
  ]
}
package "base-threads" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description: "Threads library distributed with the OCaml compiler"
  maintainer: "https://github.com/ocaml/opam-repository/issues"
}
package "base-unix" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description: "Unix library distributed with the OCaml compiler"
  maintainer: "https://github.com/ocaml/opam-repository/issues"
}
package "camlp-streams" {
  opam-version: "2.0"
  version: "5.0.1"
  synopsis: "The Stream and Genlex libraries for use with Camlp4 and Camlp5"
  description: """\
This package provides two library modules:
- Stream: imperative streams, with in-place update and memoization
  of the latest element produced.
- Genlex: a small parameterized lexical analyzer producing streams
  of tokens from streams of characters.

The two modules are designed for use with Camlp4 and Camlp5:
- The stream patterns and stream expressions of Camlp4/Camlp5 consume
  and produce data of type 'a Stream.t.
- The Genlex tokenizer can be used as a simple lexical analyzer for
  Camlp4/Camlp5-generated parsers.

The Stream module can also be used by hand-written recursive-descent
parsers, but is not very convenient for this purpose.

The Stream and Genlex modules have been part of the OCaml standard library
for a long time, and have been distributed as part of the core OCaml system.
They will be removed from the OCaml standard library at some future point,
but will be maintained and distributed separately in this camlpstreams package."""
  maintainer: [
    "Florian Angeletti <florian.angeletti@inria.fr>"
    "Xavier Leroy <xavier.leroy@college-de-france.fr>"
  ]
  authors: ["Daniel de Rauglaudre" "Xavier Leroy"]
  license: "LGPL-2.1-only WITH OCaml-LGPL-linking-exception"
  homepage: "https://github.com/ocaml/camlp-streams"
  bug-reports: "https://github.com/ocaml/camlp-streams/issues"
  depends: [
    "dune" {>= "2.7"}
    "ocaml" {>= "4.02.3"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml/camlp-streams.git"
  url {
    src: "https://github.com/ocaml/camlp-streams/archive/v5.0.1.tar.gz"
    checksum: [
      "md5=afc874b25f7a1f13e8f5cfc1182b51a7"
      "sha512=2efa8dd4a636217c8d49bac1e4e7e5558fc2f45cfea66514140a59fd99dd08d61fb9f1e17804997ff648b71b13820a5d4a1eb70fed9d848aa2abd6e41f853c86"
    ]
  }
}
package "chrome-trace" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Chrome trace event generation library"
  description:
    "This library offers no backwards compatibility guarantees. Use at your own risk."
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "ocaml" {>= "4.08.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "cmdliner" {
  opam-version: "2.0"
  version: "1.2.0"
  synopsis: "Declarative definition of command line interfaces for OCaml"
  description: """\
Cmdliner allows the declarative definition of command line interfaces
for OCaml.

It provides a simple and compositional mechanism to convert command
line arguments to OCaml values and pass them to your functions. The
module automatically handles syntax errors, help messages and UNIX man
page generation. It supports programs with single or multiple commands
and respects most of the [POSIX][1] and [GNU][2] conventions.

Cmdliner has no dependencies and is distributed under the ISC license.

[1]: http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap12.html
[2]: http://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html

Home page: http://erratique.ch/software/cmdliner"""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The cmdliner programmers"
  license: "ISC"
  tags: ["cli" "system" "declarative" "org:erratique"]
  homepage: "https://erratique.ch/software/cmdliner"
  doc: "https://erratique.ch/software/cmdliner/doc"
  bug-reports: "https://github.com/dbuenzli/cmdliner/issues"
  depends: [
    "ocaml" {>= "4.08.0"}
  ]
  build: [make "all" "PREFIX=%{prefix}%"]
  install: [
    [make "install" "LIBDIR=%{_:lib}%" "DOCDIR=%{_:doc}%"]
    [make "install-doc" "LIBDIR=%{_:lib}%" "DOCDIR=%{_:doc}%"]
  ]
  dev-repo: "git+https://erratique.ch/repos/cmdliner.git"
  url {
    src: "https://erratique.ch/software/cmdliner/releases/cmdliner-1.2.0.tbz"
    checksum:
      "sha512=6fcd6a59a6fbc6986b1aecdc3e4ce7a0dc43c65a16b427d6caa5504b10b51384f6b0bc703af646b09f5f1caeb6827b37d4480ce350ca8006204c850785f2810b"
  }
}
package "cppo" {
  opam-version: "2.0"
  version: "1.6.9"
  synopsis: "Code preprocessor like cpp for OCaml"
  description: """\
Cppo is an equivalent of the C preprocessor for OCaml programs.
It allows the definition of simple macros and file inclusion.

Cppo is:

* more OCaml-friendly than cpp
* easy to learn without consulting a manual
* reasonably fast
* simple to install and to maintain"""
  maintainer: [
    "Martin Jambon <martin@mjambon.com>" "Yishuai Li <yishuai@upenn.edu>"
  ]
  authors: "Martin Jambon"
  license: "BSD-3-Clause"
  homepage: "https://github.com/ocaml-community/cppo"
  doc: "https://ocaml-community.github.io/cppo"
  bug-reports: "https://github.com/ocaml-community/cppo/issues"
  depends: [
    "ocaml" {>= "4.02.3"}
    "dune" {>= "1.10"}
    "base-unix"
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
    ["dune" "runtest" "-p" name "-j" jobs] {with-test}
    ["dune" "build" "-p" name "@doc"] {with-doc}
  ]
  dev-repo: "git+https://github.com/ocaml-community/cppo.git"
  url {
    src: "https://github.com/ocaml-community/cppo/archive/v1.6.9.tar.gz"
    checksum: [
      "md5=d23ffe85ac7dc8f0afd1ddf622770d09"
      "sha512=26ff5a7b7f38c460661974b23ca190f0feae3a99f1974e0fd12ccf08745bd7d91b7bc168c70a5385b837bfff9530e0e4e41cf269f23dd8cf16ca658008244b44"
    ]
  }
}
package "csexp" {
  opam-version: "2.0"
  version: "1.5.2"
  synopsis: "Parsing and printing of S-expressions in Canonical form"
  description: """\
This library provides minimal support for Canonical S-expressions
[1]. Canonical S-expressions are a binary encoding of S-expressions
that is super simple and well suited for communication between
programs.

This library only provides a few helpers for simple applications. If
you need more advanced support, such as parsing from more fancy input
sources, you should consider copying the code of this library given
how simple parsing S-expressions in canonical form is.

To avoid a dependency on a particular S-expression library, the only
module of this library is parameterised by the type of S-expressions.

[1] https://en.wikipedia.org/wiki/Canonical_S-expressions"""
  maintainer: "Jeremie Dimino <jeremie@dimino.org>"
  authors: [
    "Quentin Hocquet <mefyl@gruntech.org>"
    "Jane Street Group, LLC <opensource@janestreet.com>"
    "Jeremie Dimino <jeremie@dimino.org>"
  ]
  license: "MIT"
  homepage: "https://github.com/ocaml-dune/csexp"
  doc: "https://ocaml-dune.github.io/csexp/"
  bug-reports: "https://github.com/ocaml-dune/csexp/issues"
  depends: [
    "dune" {>= "3.4"}
    "ocaml" {>= "4.03.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml-dune/csexp.git"
  url {
    src:
      "https://github.com/ocaml-dune/csexp/releases/download/1.5.2/csexp-1.5.2.tbz"
    checksum: [
      "sha256=1a14dd04bb4379a41990248550628c77913a9c07f3c35c1370b6960e697787ff"
      "sha512=be281018bcfc20d4db14894ef51c4b836d6338d2fdfe22e63d46f405f8dea7349e16f1c0ecd65f73d4c85a2a80e618cdbb8c9dafcbb9f229f04f1adca5b1973c"
    ]
  }
  x-commit-hash: "e6c4768e10c61bcb04d09748744dad55602149c6"
}
package "dot-merlin-reader" {
  opam-version: "2.0"
  version: "4.10"
  synopsis: "Reads config files for merlin"
  description: """\
Helper process: reads .merlin files and outputs the normalized content to
  stdout."""
  maintainer: "defree@gmail.com"
  authors: "The Merlin team"
  license: "MIT"
  homepage: "https://github.com/ocaml/merlin"
  bug-reports: "https://github.com/ocaml/merlin/issues"
  depends: [
    "ocaml" {>= "5.0" & < "6.0"}
    "dune" {>= "2.9.0"}
    "merlin-lib" {>= "4.9"}
    "ocamlfind" {>= "1.6.0"}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
  ]
  dev-repo: "git+https://github.com/ocaml/merlin.git"
  url {
    src: "git+https://github.com/voodoos/merlin.git#c26cfa9a"
  }
}
package "dune" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Fast, portable, and opinionated build system"
  description: """\
dune is a build system that was designed to simplify the release of
Jane Street packages. It reads metadata from "dune" files following a
very simple s-expression syntax.

dune is fast, has very low-overhead, and supports parallel builds on
all platforms. It has no system dependencies; all you need to build
dune or packages using dune is OCaml. You don't need make or bash
as long as the packages themselves don't use bash explicitly.

dune supports multi-package development by simply dropping multiple
repositories into the same directory.

It also supports multi-context builds, such as building against
several opam roots/switches simultaneously. This helps maintaining
packages across several versions of OCaml and gives cross-compilation
for free."""
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    ("ocaml" {>= "4.08"} |
     ("ocaml" {>= "4.02" & < "4.08~~"} & "ocamlfind-secondary"))
    "base-unix"
    "base-threads"
  ]
  conflicts: [
    "merlin" {< "3.4.0"}
    "ocaml-lsp-server" {< "1.3.0"}
    "dune-configurator" {< "2.3.0"}
    "odoc" {< "2.0.1"}
    "dune-release" {< "1.3.0"}
    "js_of_ocaml-compiler" {< "3.6.0"}
    "jbuilder" {= "transition"}
  ]
  build: [
    ["ocaml" "boot/bootstrap.ml" "-j" jobs]
    [
      "./_boot/dune.exe"
      "build"
      "dune.install"
      "--release"
      "--profile"
      "dune-bootstrap"
      "-j"
      jobs
    ]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "dune-action-plugin" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "[experimental] API for writing dynamic Dune actions"
  description: """\
This library is experimental. No backwards compatibility is implied.

dune-action-plugin provides an API for writing dynamic Dune actions.
Dynamic dune actions do not need to declare their dependencies
upfront; they are instead discovered automatically during the
execution of the action."""
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "dune-glob" {= version}
    "csexp" {>= "1.5.0"}
    "ppx_expect" {with-test}
    "stdune" {= version}
    "dune-private-libs" {= version}
    "dune-rpc" {= version}
    "base-unix"
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "dune-build-info" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Embed build information inside executable"
  description: """\
The build-info library allows to access information about how the
executable was built, such as the version of the project at which it
was built or the list of statically linked libraries with their
versions.  It supports reporting the version from the version control
system during development to get an precise reference of when the
executable was built."""
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "ocaml" {>= "4.08"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "dune-configurator" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Helper library for gathering system configuration"
  description: """\
dune-configurator is a small library that helps writing OCaml scripts that
test features available on the system, in order to generate config.h
files for instance.
Among other things, dune-configurator allows one to:
- test if a C program compiles
- query pkg-config
- import #define from OCaml header files
- generate config.h file"""
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "ocaml" {>= "4.04.0"}
    "base-unix"
    "csexp" {>= "1.5.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "dune-glob" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Glob string matching language supported by dune"
  description:
    "dune-glob provides a parser and interpreter for globs as understood by dune language."
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "stdune" {= version}
    "dyn"
    "ordering"
    "dune-private-libs" {= version}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "dune-private-libs" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Private libraries of Dune"
  description: """\
!!!!!!!!!!!!!!!!!!!!!!
!!!!! DO NOT USE !!!!!
!!!!!!!!!!!!!!!!!!!!!!

This package contains code that is shared between various dune-xxx
packages. However, it is not meant for public consumption and provides
no stability guarantee."""
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "csexp" {>= "1.5.0"}
    "pp" {>= "1.1.0"}
    "dyn" {= version}
    "stdune" {= version}
    "ocaml" {>= "4.08"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "dune-rpc" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Communicate with dune using rpc"
  description: "Library to connect and control a running dune instance"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "csexp"
    "ordering"
    "dyn"
    "xdg"
    "stdune" {= version}
    "pp" {>= "1.1.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "dune-rpc-lwt" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Communicate with dune using rpc and Lwt"
  description: "Specialization of dune-rpc to Lwt"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "dune-rpc" {= version}
    "result" {>= "1.5"}
    "csexp" {>= "1.5.0"}
    "lwt" {>= "5.3.0"}
    "base-unix"
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "dune-site" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Embed locations information inside executable and libraries"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "dune-private-libs" {= version}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "dyn" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Dynamic type"
  description: "Dynamic type"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "ocaml" {>= "4.08.0"}
    "ordering" {= version}
    "pp" {>= "1.1.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "fiber" {
  opam-version: "2.0"
  version: "3.7.0"
  synopsis: "Dune's monadic structured concurrency library"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml-dune/fiber"
  bug-reports: "https://github.com/ocaml-dune/fiber/issues"
  depends: [
    "dune" {>= "3.6"}
    "ocaml" {>= "4.08"}
    "ppx_expect" {with-test}
    "dyn"
    "stdune"
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test & ocaml:version >= "4.13"}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-dune/fiber.git"
  url {
    src:
      "https://github.com/ocaml-dune/fiber/releases/download/3.7.0/fiber-lwt-3.7.0.tbz"
    checksum: [
      "sha256=8648a15ae93fe6942999ce36887429a3913b62829c4714e520cc0e7a1c3b9682"
      "sha512=348b28b28ffd87de035e90753f677658e8ad58421caf3ac086e4c0bbab8508fa5fe2f55d137c425afaf790ebcf45291e16d70eac5cb766b6d9786f042b58b19b"
    ]
  }
  x-commit-hash: "dd66893a530759da26b66bd1c8939fd77f369afb"
}
package "jsonrpc" {
  opam-version: "2.0"
  version: "dev"
  synopsis: "Jsonrpc protocol implemenation"
  description: "See https://www.jsonrpc.org/specification"
  maintainer: "Rudi Grinberg <me@rgrinberg.com>"
  authors: [
    "Andrey Popp <8mayday@gmail.com>"
    "Rusty Key <iam@stfoo.ru>"
    "Louis RochÃ© <louis@louisroche.net>"
    "Oleksiy Golovko <alexei.golovko@gmail.com>"
    "Rudi Grinberg <me@rgrinberg.com>"
    "Sacha Ayoun <sachaayoun@gmail.com>"
    "cannorin <cannorin@gmail.com>"
    "Ulugbek Abdullaev <ulugbekna@gmail.com>"
    "Thibaut Mattio <thibaut.mattio@gmail.com>"
    "Max Lantas <mnxndev@outlook.com>"
  ]
  license: "ISC"
  homepage: "https://github.com/ocaml/ocaml-lsp"
  bug-reports: "https://github.com/ocaml/ocaml-lsp/issues"
  depends: [
    "dune" {>= "3.0"}
    "ocaml" {>= "4.08"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/ocaml-lsp.git"
  url {
    src: "git+https://github.com/voodoos/ocaml-lsp.git#25c8c366"
  }
}
package "lsp" {
  opam-version: "2.0"
  version: "dev"
  synopsis: "LSP protocol implementation in OCaml"
  description: """\
Implementation of the LSP protocol in OCaml. It is designed to be as portable as
possible and does not make any assumptions about IO."""
  maintainer: "Rudi Grinberg <me@rgrinberg.com>"
  authors: [
    "Andrey Popp <8mayday@gmail.com>"
    "Rusty Key <iam@stfoo.ru>"
    "Louis RochÃ© <louis@louisroche.net>"
    "Oleksiy Golovko <alexei.golovko@gmail.com>"
    "Rudi Grinberg <me@rgrinberg.com>"
    "Sacha Ayoun <sachaayoun@gmail.com>"
    "cannorin <cannorin@gmail.com>"
    "Ulugbek Abdullaev <ulugbekna@gmail.com>"
    "Thibaut Mattio <thibaut.mattio@gmail.com>"
    "Max Lantas <mnxndev@outlook.com>"
  ]
  license: "ISC"
  homepage: "https://github.com/ocaml/ocaml-lsp"
  bug-reports: "https://github.com/ocaml/ocaml-lsp/issues"
  depends: [
    "dune" {>= "3.0"}
    "jsonrpc" {= version}
    "yojson"
    "ppx_yojson_conv_lib" {>= "v0.14"}
    "cinaps" {with-test}
    "ppx_expect" {>= "v0.15.0" & with-test}
    "uutf" {>= "1.0.2"}
    "odoc" {with-doc}
    "ocaml" {>= "4.12"}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/ocaml-lsp.git"
  url {
    src: "git+https://github.com/voodoos/ocaml-lsp.git#25c8c366"
  }
}
package "lwt" {
  opam-version: "2.0"
  version: "5.6.1"
  synopsis: "Promises and event-driven I/O"
  description: """\
A promise is a value that may become determined in the future.

Lwt provides typed, composable promises. Promises that are resolved by I/O are
resolved by Lwt in parallel.

Meanwhile, OCaml code, including code creating and waiting on promises, runs in
a single thread by default. This reduces the need for locks or other
synchronization primitives. Code can be run in parallel on an opt-in basis."""
  maintainer: [
    "RaphaÃ«l Proust <code@bnwr.net>" "Anton Bachin <antonbachin@yahoo.com>"
  ]
  authors: ["JÃ©rÃ´me Vouillon" "JÃ©rÃ©mie Dimino"]
  license: "MIT"
  homepage: "https://github.com/ocsigen/lwt"
  doc: "https://ocsigen.org/lwt"
  bug-reports: "https://github.com/ocsigen/lwt/issues"
  depends: [
    "cppo" {build & >= "1.1.0"}
    "dune" {>= "1.8.0"}
    "dune-configurator"
    "ocaml" {>= "4.08"}
    "ocplib-endian"
    "ocamlfind" {dev & >= "1.7.3-1"}
  ]
  depopts: ["base-threads" "base-unix" "conf-libev"]
  build: [
    [
      "dune"
      "exec"
      "-p"
      name
      "src/unix/config/discover.exe"
      "--"
      "--save"
      "--use-libev"
      "%{conf-libev:installed}%"
    ]
    ["dune" "build" "-p" name "-j" jobs]
  ]
  dev-repo: "git+https://github.com/ocsigen/lwt.git"
  url {
    src: "https://github.com/ocsigen/lwt/archive/5.6.1.tar.gz"
    checksum: [
      "md5=279024789a0ec84a9d97d98bad847f97"
      "sha512=698875bd3bfcd5baa47eb48e412f442d289f9972421321541860ebe110b9af1949c3fbc253768495726ec547fe4ba25483cd97ff39bc668496fba95b2ed9edd8"
    ]
  }
}
package "menhir" {
  opam-version: "2.0"
  version: "20230608"
  synopsis: "An LR(1) parser generator"
  maintainer: "francois.pottier@inria.fr"
  authors: [
    "FranÃ§ois Pottier <francois.pottier@inria.fr>"
    "Yann RÃ©gis-Gianas <yrg@pps.univ-paris-diderot.fr>"
  ]
  license: "GPL-2.0-only"
  homepage: "http://gitlab.inria.fr/fpottier/menhir"
  bug-reports: "https://gitlab.inria.fr/fpottier/menhir/-/issues"
  depends: [
    "ocaml" {>= "4.03.0"}
    "dune" {>= "2.8.0"}
    "menhirLib" {= version}
    "menhirSdk" {= version}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://gitlab.inria.fr/fpottier/menhir.git"
  url {
    src:
      "https://gitlab.inria.fr/fpottier/menhir/-/archive/20230608/archive.tar.gz"
    checksum: [
      "md5=8ff26b1e3685c472b7b3aba2fe938a43"
      "sha512=334b9dcb1283a28b8547082a89536b1d439ff588290b8eaecdf4802c5f74dbc8d16ad6fc6c0820036183518d83e2cc273a75787a8b41137424c8e7ee82e2b50a"
    ]
  }
}
package "menhirLib" {
  opam-version: "2.0"
  version: "20230608"
  synopsis: "Runtime support library for parsers generated by Menhir"
  maintainer: "francois.pottier@inria.fr"
  authors: [
    "FranÃ§ois Pottier <francois.pottier@inria.fr>"
    "Yann RÃ©gis-Gianas <yrg@pps.univ-paris-diderot.fr>"
  ]
  license: "LGPL-2.0-only with OCaml-LGPL-linking-exception"
  homepage: "http://gitlab.inria.fr/fpottier/menhir"
  bug-reports: "https://gitlab.inria.fr/fpottier/menhir/-/issues"
  depends: [
    "ocaml" {>= "4.03.0"}
    "dune" {>= "2.8.0"}
  ]
  conflicts: [
    "menhir" {!= version}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://gitlab.inria.fr/fpottier/menhir.git"
  url {
    src:
      "https://gitlab.inria.fr/fpottier/menhir/-/archive/20230608/archive.tar.gz"
    checksum: [
      "md5=8ff26b1e3685c472b7b3aba2fe938a43"
      "sha512=334b9dcb1283a28b8547082a89536b1d439ff588290b8eaecdf4802c5f74dbc8d16ad6fc6c0820036183518d83e2cc273a75787a8b41137424c8e7ee82e2b50a"
    ]
  }
}
package "menhirSdk" {
  opam-version: "2.0"
  version: "20230608"
  synopsis: "Compile-time library for auxiliary tools related to Menhir"
  maintainer: "francois.pottier@inria.fr"
  authors: [
    "FranÃ§ois Pottier <francois.pottier@inria.fr>"
    "Yann RÃ©gis-Gianas <yrg@pps.univ-paris-diderot.fr>"
  ]
  license: "LGPL-2.0-only with OCaml-LGPL-linking-exception"
  homepage: "http://gitlab.inria.fr/fpottier/menhir"
  bug-reports: "https://gitlab.inria.fr/fpottier/menhir/-/issues"
  depends: [
    "ocaml" {>= "4.03.0"}
    "dune" {>= "2.8.0"}
  ]
  conflicts: [
    "menhir" {!= version}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://gitlab.inria.fr/fpottier/menhir.git"
  url {
    src:
      "https://gitlab.inria.fr/fpottier/menhir/-/archive/20230608/archive.tar.gz"
    checksum: [
      "md5=8ff26b1e3685c472b7b3aba2fe938a43"
      "sha512=334b9dcb1283a28b8547082a89536b1d439ff588290b8eaecdf4802c5f74dbc8d16ad6fc6c0820036183518d83e2cc273a75787a8b41137424c8e7ee82e2b50a"
    ]
  }
}
package "merlin" {
  opam-version: "2.0"
  version: "4.10"
  synopsis:
    "Editor helper, provides completion, typing and source browsing in Vim and Emacs"
  description:
    "Merlin is an assistant for editing OCaml code. It aims to provide the features available in modern IDEs: error reporting, auto completion, source browsing and much more."
  maintainer: "defree@gmail.com"
  authors: "The Merlin team"
  license: "MIT"
  homepage: "https://github.com/ocaml/merlin"
  bug-reports: "https://github.com/ocaml/merlin/issues"
  depends: [
    "ocaml" {>= "5.1" & < "5.2"}
    "dune" {>= "2.9.0"}
    "merlin-lib" {= version}
    "dot-merlin-reader" {>= "4.9"}
    "yojson" {>= "2.0.0"}
    "conf-jq" {with-test}
    "ppxlib" {with-test}
  ]
  conflicts: [
    "seq" {!= "base"}
    "base-effects"
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
    ["dune" "runtest" "-p" name "-j" jobs] {with-test}
  ]
  post-messages:
    """\
merlin installed.

Quick setup for VIM
-------------------
Append this to your .vimrc to add merlin to vim's runtime-path:
  let g:opamshare = substitute(system('opam var share'),'\\n$','','''')
  execute "set rtp+=" . g:opamshare . "/merlin/vim"

Also run the following line in vim to index the documentation:
  :execute "helptags " . g:opamshare . "/merlin/vim/doc"

Quick setup for EMACS
-------------------
Add opam emacs directory to your load-path by appending this to your .emacs:
  (let ((opam-share (ignore-errors (car (process-lines "opam" "var" "share")))))
   (when (and opam-share (file-directory-p opam-share))
    ;; Register Merlin
    (add-to-list 'load-path (expand-file-name "emacs/site-lisp" opam-share))
    (autoload 'merlin-mode "merlin" nil t nil)
    ;; Automatically start it in OCaml buffers
    (add-hook 'tuareg-mode-hook 'merlin-mode t)
    (add-hook 'caml-mode-hook 'merlin-mode t)
    ;; Use opam switch to lookup ocamlmerlin binary
    (setq merlin-command 'opam)))

Take a look at https://github.com/ocaml/merlin for more information

Quick setup with opam-user-setup
--------------------------------

Opam-user-setup support Merlin.

  $ opam user-setup install

should take care of basic setup.
See https://github.com/OCamlPro/opam-user-setup"""
      {success & !user-setup:installed}
  dev-repo: "git+https://github.com/ocaml/merlin.git"
  url {
    src: "git+https://github.com/voodoos/merlin.git#c26cfa9a"
  }
}
package "merlin-lib" {
  opam-version: "2.0"
  version: "4.10"
  synopsis: "Merlin's libraries"
  description: """\
These libraries provides access to low-level compiler interfaces and the
  standard higher-level merlin protocol. The library is provided as-is, is not
  thoroughly documented, and its public API might break with any new release."""
  maintainer: "defree@gmail.com"
  authors: "The Merlin team"
  license: "MIT"
  homepage: "https://github.com/ocaml/merlin"
  bug-reports: "https://github.com/ocaml/merlin/issues"
  depends: [
    "ocaml" {>= "5.1" & < "5.2"}
    "dune" {>= "2.9.0"}
    "csexp" {>= "1.5.1"}
    "menhir" {dev & >= "20201216"}
    "menhirLib" {dev & >= "20201216"}
    "menhirSdk" {dev & >= "20201216"}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
  ]
  dev-repo: "git+https://github.com/ocaml/merlin.git"
  url {
    src: "git+https://github.com/voodoos/merlin.git#c26cfa9a"
  }
}
package "ocaml" {
  opam-version: "2.0"
  version: "5.1.0"
  synopsis: "The OCaml compiler (virtual package)"
  description: """\
This package requires a matching implementation of OCaml,
and polls it to initialise specific variables like `ocaml:native-dynlink`"""
  maintainer: "platform@lists.ocaml.org"
  authors: [
    "Xavier Leroy"
    "Damien Doligez"
    "Alain Frisch"
    "Jacques Garrigue"
    "Didier RÃ©my"
    "JÃ©rÃ´me Vouillon"
  ]
  license: "LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception"
  homepage: "https://ocaml.org"
  bug-reports: "https://github.com/ocaml/opam-repository/issues"
  depends: [
    "ocaml-config" {>= "3"}
    "ocaml-base-compiler" {>= "5.1.0~" & < "5.1.1~"} |
    "ocaml-variants" {>= "5.1.0~" & < "5.1.1~"} |
    "ocaml-system" {>= "5.1.0~" & < "5.1.1~"} |
    "dkml-base-compiler" {>= "5.1.0~" & < "5.1.1~"}
  ]
  flags: conf
  setenv: [
    [CAML_LD_LIBRARY_PATH = "%{_:stubsdir}%"]
    [CAML_LD_LIBRARY_PATH += "%{lib}%/stublibs"]
    [OCAML_TOPLEVEL_PATH = "%{toplevel}%"]
  ]
  build: [
    "ocaml" "%{ocaml-config:share}%/gen_ocaml_config.ml" _:version _:name
  ]
  build-env: [
    [CAML_LD_LIBRARY_PATH = ""]
    [LSAN_OPTIONS = "detect_leaks=0,exitcode=0"]
    [ASAN_OPTIONS = "detect_leaks=0,exitcode=0"]
  ]
}
package "ocaml-config" {
  opam-version: "2.0"
  version: "3"
  synopsis: "OCaml Switch Configuration"
  description:
    "This package is used by the OCaml package to set-up its variables."
  maintainer: "platform@lists.ocaml.org"
  authors: [
    "Louis Gesbert <louis.gesbert@ocamlpro.com>"
    "David Allsopp <david.allsopp@metastack.com>"
  ]
  license: "ISC"
  homepage: "https://opam.ocaml.org/"
  bug-reports: "https://github.com/ocaml/opam/issues"
  depends: [
    "ocaml-base-compiler" {>= "5.0.0~" | os = "win32"} |
    "ocaml-variants" {>= "5.0.0~" | os = "win32"} |
    "ocaml-system" {>= "5.0.0~" | os = "win32"} |
    "dkml-base-compiler" {>= "4.12.0~"}
  ]
  substs: "gen_ocaml_config.ml"
  extra-files: [
    ["gen_ocaml_config.ml.in" "md5=c0a50fb1f6ffe7a48bf8600e83ae6d38"]
    ["ocaml-config.install" "md5=8e50c5e2517d3463b3aad649748cafd7"]
  ]
}
package "ocaml-lsp-server" {
  opam-version: "2.0"
  version: "dev"
  synopsis: "LSP Server for OCaml"
  description: "An LSP server for OCaml."
  maintainer: "Rudi Grinberg <me@rgrinberg.com>"
  authors: [
    "Andrey Popp <8mayday@gmail.com>"
    "Rusty Key <iam@stfoo.ru>"
    "Louis RochÃ© <louis@louisroche.net>"
    "Oleksiy Golovko <alexei.golovko@gmail.com>"
    "Rudi Grinberg <me@rgrinberg.com>"
    "Sacha Ayoun <sachaayoun@gmail.com>"
    "cannorin <cannorin@gmail.com>"
    "Ulugbek Abdullaev <ulugbekna@gmail.com>"
    "Thibaut Mattio <thibaut.mattio@gmail.com>"
    "Max Lantas <mnxndev@outlook.com>"
  ]
  license: "ISC"
  homepage: "https://github.com/ocaml/ocaml-lsp"
  bug-reports: "https://github.com/ocaml/ocaml-lsp/issues"
  depends: [
    "dune" {>= "3.0"}
    "yojson"
    "re" {>= "1.5.0"}
    "ppx_yojson_conv_lib" {>= "v0.14"}
    "dune-rpc" {>= "3.4.0"}
    "chrome-trace" {>= "3.3.0"}
    "dyn"
    "stdune"
    "fiber" {>= "3.1.1"}
    "xdg"
    "ordering"
    "dune-build-info"
    "spawn"
    "odoc-parser" {>= "2.0.0"}
    "ppx_expect" {>= "v0.15.0" & with-test}
    "ocamlformat" {with-test & = "0.24.1"}
    "ocamlc-loc" {>= "3.5.0" & < "3.7.0"}
    "uutf" {>= "1.0.2"}
    "pp" {>= "1.1.2"}
    "csexp" {>= "1.5"}
    "ocamlformat-rpc-lib" {>= "0.21.0"}
    "odoc" {with-doc}
    "ocaml"
    "merlin-lib" {>= "4.9" & < "5.0"}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-j" jobs "ocaml-lsp-server.install" "--release"]
  ]
  dev-repo: "git+https://github.com/ocaml/ocaml-lsp.git"
  url {
    src: "git+https://github.com/voodoos/ocaml-lsp.git#25c8c366"
  }
}
package "ocaml-uideps" {
  opam-version: "2.0"
  version: "dev"
  synopsis: "A tool that indexes value usages in a cmt file."
  description:
    "ocaml-uideps should integrate with the build system to index a codebase."
  depends: [
    "dune" {>= "2.9"}
    "cmdliner" {>= "1.1.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "--promote-install-files=false"
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
    ["dune" "install" "-p" name "--create-install-files" name]
  ]
  url {
    src: "git+https://github.com/voodoos/ocaml-uideps.git#5c6d5241"
  }
}
package "ocaml-variants" {
  opam-version: "2.0"
  version: "5.1.0+trunk"
  synopsis: "OCaml development version"
  maintainer: "caml-list@inria.fr"
  authors: [
    "Xavier Leroy"
    "Damien Doligez"
    "Alain Frisch"
    "Jacques Garrigue"
    "Didier RÃ©my"
    "JÃ©rÃ´me Vouillon"
  ]
  license: "LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception"
  homepage: "https://github.com/ocaml/ocaml/"
  bug-reports: "https://github.com/ocaml/ocaml/issues"
  depends: [
    "ocaml" {= "5.1.0" & post}
    "base-unix" {post}
    "base-bigarray" {post}
    "base-threads" {post}
    "base-domains" {post}
  ]
  depopts: [
    "ocaml-option-afl"
    "ocaml-option-bytecode-only"
    "ocaml-option-no-flat-float-array"
    "ocaml-option-flambda"
    "ocaml-option-fp"
    "ocaml-option-musl"
    "ocaml-option-static"
  ]
  conflicts: [
    "ocaml-option-32bit"
    "ocaml-option-nnpchecker"
    "ocaml-option-default-unsafe-string"
  ]
  conflict-class: "ocaml-core-compiler"
  flags: compiler
  build: [
    [
      "./configure"
      "--prefix=%{prefix}%"
      "--docdir=%{doc}%/ocaml"
      "--with-afl" {ocaml-option-afl:installed}
      "--disable-native-compiler" {ocaml-option-bytecode-only:installed}
      "--disable-flat-float-array"
        {ocaml-option-no-flat-float-array:installed}
      "--enable-flambda" {ocaml-option-flambda:installed}
      "--enable-frame-pointers" {ocaml-option-fp:installed}
      "CC=cc"
        {!ocaml-option-32bit:installed & !ocaml-option-musl:installed &
         (os = "openbsd" | os = "macos")}
      "CC=musl-gcc"
        {ocaml-option-musl:installed & os-distribution != "alpine"}
      "CFLAGS=-Os" {ocaml-option-musl:installed}
      "ASPP=cc -c"
        {!ocaml-option-32bit:installed & !ocaml-option-musl:installed &
         (os = "openbsd" | os = "macos")}
      "ASPP=musl-gcc -c"
        {ocaml-option-musl:installed & os-distribution != "alpine"}
      "LIBS=-static" {ocaml-option-static:installed}
    ]
    [make "-j%{jobs}%"]
  ]
  install: [make "install"]
  url {
    src: "git+https://github.com/voodoos/ocaml.git#02ea57be"
  }
}
package "ocamlbuild" {
  opam-version: "2.0"
  version: "0.14.2"
  synopsis:
    "OCamlbuild is a build system with builtin rules to easily build most OCaml projects"
  maintainer: "Gabriel Scherer <gabriel.scherer@gmail.com>"
  authors: ["Nicolas Pouillard" "Berke Durak"]
  license: "LGPL-2.0-or-later WITH OCaml-LGPL-linking-exception"
  homepage: "https://github.com/ocaml/ocamlbuild/"
  doc: "https://github.com/ocaml/ocamlbuild/blob/master/manual/manual.adoc"
  bug-reports: "https://github.com/ocaml/ocamlbuild/issues"
  depends: [
    "ocaml" {>= "4.03"}
  ]
  conflicts: [
    "base-ocamlbuild"
    "ocamlfind" {< "1.6.2"}
  ]
  build: [
    [
      make
      "-f"
      "configure.make"
      "all"
      "OCAMLBUILD_PREFIX=%{prefix}%"
      "OCAMLBUILD_BINDIR=%{bin}%"
      "OCAMLBUILD_LIBDIR=%{lib}%"
      "OCAMLBUILD_MANDIR=%{man}%"
      "OCAML_NATIVE=%{ocaml:native}%"
      "OCAML_NATIVE_TOOLS=%{ocaml:native}%"
    ]
    [make "check-if-preinstalled" "all" "opam-install"]
  ]
  dev-repo: "git+https://github.com/ocaml/ocamlbuild.git"
  url {
    src:
      "https://github.com/ocaml/ocamlbuild/archive/refs/tags/0.14.2.tar.gz"
    checksum: [
      "md5=2f407fadd57b073155a6aead887d9676"
      "sha512=f568bf10431a1f701e8bd7554dc662400a0d978411038bbad93d44dceab02874490a8a5886a9b44e017347e7949997f13f5c3752f74e1eb5e273d2beb19a75fd"
    ]
  }
}
package "ocamlc-loc" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Parse ocaml compiler output into structured form"
  description:
    "This library offers no backwards compatibility guarantees. Use at your own risk."
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "ocaml" {>= "4.08.0"}
    "dyn" {= version}
    "odoc" {with-doc}
  ]
  conflicts: [
    "ocaml-lsp-server" {< "1.15.0"}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "ocamlfind" {
  opam-version: "2.0"
  version: "1.9.6"
  synopsis: "A library manager for OCaml"
  description: """\
Findlib is a library manager for OCaml. It provides a convention how
to store libraries, and a file format ("META") to describe the
properties of libraries. There is also a tool (ocamlfind) for
interpreting the META files, so that it is very easy to use libraries
in programs and scripts."""
  maintainer: "Thomas Gazagnaire <thomas@gazagnaire.org>"
  authors: "Gerd Stolpmann <gerd@gerd-stolpmann.de>"
  license: "MIT"
  homepage: "http://projects.camlcity.org/projects/findlib.html"
  bug-reports: "https://github.com/ocaml/ocamlfind/issues"
  depends: [
    "ocaml" {>= "3.08.0"}
  ]
  depopts: ["graphics"]
  available: os != "win32"
  build: [
    [
      "./configure"
      "-bindir"
      bin
      "-sitelib"
      lib
      "-mandir"
      man
      "-config"
      "%{lib}%/findlib.conf"
      "-no-custom"
      "-no-camlp4" {!ocaml:preinstalled & ocaml:version >= "4.02.0"}
      "-no-topfind" {ocaml:preinstalled}
    ]
    [make "all"]
    [make "opt"] {ocaml:native}
  ]
  install: [
    [make "install"]
    ["install" "-m" "0755" "ocaml-stub" "%{bin}%/ocaml"] {ocaml:preinstalled}
  ]
  patches: "0001-Harden-test-for-OCaml-5.patch"
  dev-repo: "git+https://github.com/ocaml/ocamlfind.git"
  extra-files: [
    "0001-Harden-test-for-OCaml-5.patch"
    "md5=3cddbf72164c29d4e50e077a92a37c6c"
  ]
  url {
    src: "http://download.camlcity.org/download/findlib-1.9.6.tar.gz"
    checksum: [
      "md5=96c6ee50a32cca9ca277321262dbec57"
      "sha512=cfaf1872d6ccda548f07d32cc6b90c3aafe136d2aa6539e03143702171ee0199add55269bba894c77115535dc46a5835901a5d7c75768999e72db503bfd83027"
    ]
  }
}
package "ocamlformat-rpc-lib" {
  opam-version: "2.0"
  version: "0.25.1"
  synopsis: "Auto-formatter for OCaml code (RPC mode)"
  description:
    "OCamlFormat is a tool to automatically format OCaml code in a uniform style. This package defines a RPC interface to OCamlFormat"
  maintainer: "OCamlFormat Team <ocamlformat-dev@lists.ocaml.org>"
  authors: "Josh Berdine <jjb@fb.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml-ppx/ocamlformat"
  bug-reports: "https://github.com/ocaml-ppx/ocamlformat/issues"
  depends: [
    "dune" {>= "2.8"}
    "ocaml" {>= "4.08"}
    "csexp" {>= "1.4.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-ppx/ocamlformat.git"
  url {
    src:
      "https://github.com/ocaml-ppx/ocamlformat/releases/download/0.25.1/ocamlformat-0.25.1.tbz"
    checksum: [
      "sha256=dc8f2a330ca3930b36cacb2623bb360ed8bdf6e4a8acd293dbd9e2241a6fd33d"
      "sha512=b28f545425fb5375447c90022d065dc7fd51ed2f66d8c1f65a71a6ad2465d039a8686e8f18249e5ad3a2362fee6149c855ef30eb45fb9d06d743a53d26b3e26f"
    ]
  }
  x-commit-hash: "651f767b48e14ba6b24db9421306942d9e51adcc"
}
package "ocplib-endian" {
  opam-version: "2.0"
  version: "1.2"
  synopsis:
    "Optimised functions to read and write int16/32/64 from strings and bigarrays"
  description: """\
The library implements three modules:
* [EndianString](https://github.com/OCamlPro/ocplib-endian/blob/master/src/endianString.mli) works directly on strings, and provides submodules BigEndian and LittleEndian, with their unsafe counter-parts;
* [EndianBytes](https://github.com/OCamlPro/ocplib-endian/blob/master/src/endianBytes.mli) works directly on bytes, and provides submodules BigEndian and LittleEndian, with their unsafe counter-parts;
* [EndianBigstring](https://github.com/OCamlPro/ocplib-endian/blob/master/src/endianBigstring.mli) works on bigstrings (Bigarrays of chars), and provides submodules BigEndian and LittleEndian, with their unsafe counter-parts."""
  maintainer: "pierre.chambart@ocamlpro.com"
  authors: "Pierre Chambart"
  license: "LGPL-2.1-or-later WITH OCaml-LGPL-linking-exception"
  homepage: "https://github.com/OCamlPro/ocplib-endian"
  doc: "https://ocamlpro.github.io/ocplib-endian/ocplib-endian/"
  bug-reports: "https://github.com/OCamlPro/ocplib-endian/issues"
  depends: [
    "base-bytes"
    "ocaml" {>= "4.03.0"}
    "cppo" {>= "1.1.0" & build}
    "dune" {>= "1.0"}
  ]
  build: [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
  dev-repo: "git+https://github.com/OCamlPro/ocplib-endian.git"
  url {
    src:
      "https://github.com/OCamlPro/ocplib-endian/archive/refs/tags/1.2.tar.gz"
    checksum: [
      "md5=8d5492eeb7c6815ade72a7415ea30949"
      "sha512=2e70be5f3d6e377485c60664a0e235c3b9b24a8d6b6a03895d092c6e40d53810bfe1f292ee69e5181ce6daa8a582bfe3d59f3af889f417134f658812be5b8b85"
    ]
  }
}
package "odoc-parser" {
  opam-version: "2.0"
  version: "2.0.0"
  synopsis: "Parser for ocaml documentation comments"
  description: """\
Odoc_parser is a library for parsing the contents of OCaml documentation
comments, formatted using 'odoc' syntax, an extension of the language
understood by ocamldoc."""
  maintainer: "Jon Ludlam <jon@recoil.org>"
  authors: "Anton Bachin <antonbachin@yahoo.com>"
  license: "ISC"
  homepage: "https://github.com/ocaml-doc/odoc-parser"
  doc: "https://ocaml-doc.github.io/odoc-parser/"
  bug-reports: "https://github.com/ocaml-doc/odoc-parser/issues"
  depends: [
    "dune" {>= "2.8"}
    "ocaml" {>= "4.02.0"}
    "astring"
    "result"
    "camlp-streams"
    "ppx_expect" {with-test}
    ("ocaml" {< "4.04.1" & with-test} | "sexplib0" {with-test})
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs "@install" "@runtest" {with-test}]
  ]
  dev-repo: "git+https://github.com/ocaml-doc/odoc-parser.git"
  url {
    src:
      "https://github.com/ocaml-doc/odoc-parser/releases/download/2.0.0/odoc-parser-2.0.0.tbz"
    checksum: [
      "sha256=407919fbb0eb95761d6fc6ec6777628d94aa1907343bdca678b1880bafb33922"
      "sha512=d2bffa3e9f30471045682e390dcee7a2c1caf3831bca4bd57c16939e782c2e23434e6f1c9887580a1804800b3629ef4c4311a9d418fca5a939f324650d54006e"
    ]
  }
  x-commit-hash: "ebfd3b9489e44187da2c67d79a32b6fc1e92bda4"
}
package "ordering" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Element ordering"
  description: "Element ordering"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "ocaml" {>= "4.08.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "pp" {
  opam-version: "2.0"
  version: "1.1.2"
  synopsis: "Pretty-printing library"
  description: """\
This library provides a lean alternative to the Format [1] module of
the OCaml standard library. It aims to make it easy for users to do
the right thing. If you have tried Format before but find its API
complicated and difficult to use, then Pp might be a good choice for
you.

Pp uses the same concepts of boxes and break hints, and the final
rendering is done to formatter from the Format module. However it
defines its own algebra which some might find easier to work with and
reason about. No previous knowledge is required to start using this
library, however the various guides for the Format module such as this
one [2] should be applicable to Pp as well.

[1]: https://caml.inria.fr/pub/docs/manual-ocaml/libref/Format.html
[2]: http://caml.inria.fr/resources/doc/guides/format.en.html"""
  maintainer: "Jeremie Dimino <jeremie@dimino.org>"
  authors: ["Jane Street Group, LLC" "Jeremie Dimino <jeremie@dimino.org>"]
  license: "MIT"
  homepage: "https://github.com/ocaml-dune/pp"
  doc: "https://ocaml-dune.github.io/pp/"
  bug-reports: "https://github.com/ocaml-dune/pp/issues"
  depends: [
    "dune" {>= "2.0"}
    "ocaml" {>= "4.08.0"}
    "ppx_expect" {with-test}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-dune/pp.git"
  url {
    src:
      "https://github.com/ocaml-dune/pp/releases/download/1.1.2/pp-1.1.2.tbz"
    checksum: [
      "sha256=e4a4e98d96b1bb76950fcd6da4e938c86d989df4d7e48f02f7a44595f5af1d56"
      "sha512=58f78b083483006b40814be9aac33c895349eb1c6427d2762b4d760192613401262478bd5deff909763517560b06af7bf013c6a6f87d549aafa77b26345303f2"
    ]
  }
  x-commit-hash: "395b95c89cfe2c6d538dad9d56721b6a7278d46c"
}
package "ppx_yojson_conv_lib" {
  opam-version: "2.0"
  version: "v0.16.0"
  synopsis: "Runtime lib for ppx_yojson_conv"
  description: "Part of the Jane Street's PPX rewriters collection."
  maintainer: "Jane Street developers"
  authors: "Jane Street Group, LLC"
  license: "MIT"
  homepage: "https://github.com/janestreet/ppx_yojson_conv_lib"
  doc:
    "https://ocaml.janestreet.com/ocaml-core/latest/doc/ppx_yojson_conv_lib/index.html"
  bug-reports: "https://github.com/janestreet/ppx_yojson_conv_lib/issues"
  depends: [
    "ocaml" {>= "4.14.0"}
    "dune" {>= "2.0.0"}
    "yojson" {>= "1.7.0"}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/janestreet/ppx_yojson_conv_lib.git"
  url {
    src:
      "https://ocaml.janestreet.com/ocaml-core/v0.16/files/ppx_yojson_conv_lib-v0.16.0.tar.gz"
    checksum:
      "sha256=557c43c88d365b4cbb514d809f1eecc54d7b9976b0669bc55b02169e6c86ec7d"
  }
}
package "re" {
  opam-version: "2.0"
  version: "1.10.4"
  synopsis: "RE is a regular expression library for OCaml"
  description: """\
Pure OCaml regular expressions with:
* Perl-style regular expressions (module Re.Perl)
* Posix extended regular expressions (module Re.Posix)
* Emacs-style regular expressions (module Re.Emacs)
* Shell-style file globbing (module Re.Glob)
* Compatibility layer for OCaml's built-in Str module (module Re.Str)"""
  maintainer: "rudi.grinberg@gmail.com"
  authors: [
    "Jerome Vouillon"
    "Thomas Gazagnaire"
    "Anil Madhavapeddy"
    "Rudi Grinberg"
    "Gabriel Radanne"
  ]
  license: "LGPL-2.0-or-later WITH OCaml-LGPL-linking-exception"
  homepage: "https://github.com/ocaml/ocaml-re"
  bug-reports: "https://github.com/ocaml/ocaml-re/issues"
  depends: [
    "ocaml" {>= "4.03"}
    "dune" {>= "2.0"}
    "ounit" {with-test}
    "seq"
  ]
  build: [
    ["dune" "subst"] {dev}
    ["dune" "build" "-p" name "-j" jobs]
    ["dune" "runtest" "-p" name "-j" jobs] {with-test}
  ]
  dev-repo: "git+https://github.com/ocaml/ocaml-re.git"
  url {
    src:
      "https://github.com/ocaml/ocaml-re/releases/download/1.10.4/re-1.10.4.tbz"
    checksum: [
      "sha256=83eb3e4300aa9b1dc7820749010f4362ea83524742130524d78c20ce99ca747c"
      "sha512=92b05cf92c389fa8c753f2acca837b15dd05a4a2e8e2bec7a269d2e14c35b1a786d394258376648f80b4b99250ba1900cfe68230b8385aeac153149d9ce56099"
    ]
  }
  x-commit-hash: "e9a4cecb8294c1839db18b1d0c30e755ec85ed5e"
}
package "result" {
  opam-version: "2.0"
  version: "1.5"
  synopsis: "Compatibility Result module"
  description: """\
Projects that want to use the new result type defined in OCaml >= 4.03
while staying compatible with older version of OCaml should use the
Result module defined in this library."""
  maintainer: "Jane Street developers"
  authors: "Jane Street Group, LLC"
  license: "BSD-3-Clause"
  homepage: "https://github.com/janestreet/result"
  bug-reports: "https://github.com/janestreet/result/issues"
  depends: [
    "ocaml"
    "dune" {>= "1.0"}
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/janestreet/result.git"
  url {
    src:
      "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz"
    checksum: "md5=1b82dec78849680b49ae9a8a365b831b"
  }
}
package "seq" {
  opam-version: "2.0"
  version: "base"
  synopsis:
    "Compatibility package for OCaml's standard iterator type starting from 4.07."
  maintainer: " "
  authors: " "
  homepage: " "
  bug-reports: "https://caml.inria.fr/mantis/main_page.php"
  depends: [
    "ocaml" {>= "4.07.0"}
  ]
  dev-repo: "git+https://github.com/ocaml/ocaml.git"
  extra-files: [
    ["seq.install" "md5=026b31e1df290373198373d5aaa26e42"]
    ["META.seq" "md5=b33c8a1a6c7ed797816ce27df4855107"]
  ]
}
package "spawn" {
  opam-version: "2.0"
  version: "v0.15.1"
  synopsis: "Spawning sub-processes"
  description: """\
Spawn is a small library exposing only one functionality: spawning sub-process.

It has three main goals:

1. provide missing features of Unix.create_process such as providing a
working directory

2. provide better errors when a system call fails in the
sub-process. For instance if a command is not found, you get a proper
[Unix.Unix_error] exception

3. improve performance by using vfork when available. It is often
claimed that nowadays fork is as fast as vfork, however in practice
fork takes time proportional to the process memory while vfork is
constant time. In application using a lot of memory, vfork can be
thousands of times faster than fork."""
  maintainer: "Jane Street developers"
  authors: "Jane Street Group, LLC"
  license: "MIT"
  homepage: "https://github.com/janestreet/spawn"
  doc: "https://janestreet.github.io/spawn/"
  bug-reports: "https://github.com/janestreet/spawn/issues"
  depends: [
    "dune" {>= "2.8"}
    "ppx_expect" {with-test}
    "ocaml" {>= "4.05"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/janestreet/spawn.git"
  url {
    src: "https://github.com/janestreet/spawn/archive/v0.15.1.tar.gz"
    checksum: [
      "sha256=9afdee314fab6c3fcd689ab6eb5608d6b78078e6dede3953a47debde06c19d50"
      "sha512=efdb31d5ec5ea36d0bc80224d4ee04e46ce3428d1662870e6cebece92bc313d6eebee378802c0c059dd6e0cafea515308c31b7dfaf04a098eb4566583c1e9ed4"
    ]
  }
  x-commit-hash: "13d279ebfa8c40d4bafe18cddfdff0de54b4eaff"
}
package "stdune" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "Dune's unstable standard library"
  description:
    "This library offers no backwards compatibility guarantees. Use at your own risk."
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "ocaml" {>= "4.08.0"}
    "base-unix"
    "dyn" {= version}
    "ordering" {= version}
    "pp" {>= "1.1.0"}
    "csexp" {>= "1.5.0"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "topkg" {
  opam-version: "2.0"
  version: "1.0.7"
  synopsis: "The transitory OCaml software packager"
  description: """\
Topkg is a packager for distributing OCaml software. It provides an
API to describe the files a package installs in a given build
configuration and to specify information about the package's
distribution, creation and publication procedures.

The optional topkg-care package provides the `topkg` command line tool
which helps with various aspects of a package's life cycle: creating
and linting a distribution, releasing it on the WWW, publish its
documentation, add it to the OCaml opam repository, etc.

Topkg is distributed under the ISC license and has **no**
dependencies. This is what your packages will need as a *build*
dependency.

Topkg-care is distributed under the ISC license it depends on
[fmt][fmt], [logs][logs], [bos][bos], [cmdliner][cmdliner],
[webbrowser][webbrowser] and `opam-format`.

[fmt]: http://erratique.ch/software/fmt
[logs]: http://erratique.ch/software/logs
[bos]: http://erratique.ch/software/bos
[cmdliner]: http://erratique.ch/software/cmdliner
[webbrowser]: http://erratique.ch/software/webbrowser

Home page: http://erratique.ch/software/topkg"""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The topkg programmers"
  license: "ISC"
  tags: ["packaging" "ocamlbuild" "org:erratique"]
  homepage: "https://erratique.ch/software/topkg"
  doc: "https://erratique.ch/software/topkg/doc"
  bug-reports: "https://github.com/dbuenzli/topkg/issues"
  depends: [
    "ocaml" {>= "4.05.0"}
    "ocamlfind" {build & >= "1.6.1"}
    "ocamlbuild"
  ]
  build: [
    "ocaml" "pkg/pkg.ml" "build" "--pkg-name" name "--dev-pkg" "%{dev}%"
  ]
  dev-repo: "git+https://erratique.ch/repos/topkg.git"
  url {
    src: "https://erratique.ch/software/topkg/releases/topkg-1.0.7.tbz"
    checksum:
      "sha512=09e59f1759bf4db8471f02d0aefd8db602b44932a291c05c312b1423796e7a15d1598d3c62a0cec7f083eff8e410fac09363533dc4bd2120914bb9664efea535"
  }
}
package "uutf" {
  opam-version: "2.0"
  version: "1.0.3"
  synopsis: "Non-blocking streaming Unicode codec for OCaml"
  description: """\
Uutf is a non-blocking streaming codec to decode and encode the UTF-8,
UTF-16, UTF-16LE and UTF-16BE encoding schemes. It can efficiently
work character by character without blocking on IO. Decoders perform
character position tracking and support newline normalization.

Functions are also provided to fold over the characters of UTF encoded
OCaml string values and to directly encode characters in OCaml
Buffer.t values. **Note** that since OCaml 4.14, that functionality
can be found in the Stdlib and you are encouraged to migrate to it.

Uutf has no dependency and is distributed under the ISC license.

Home page: http://erratique.ch/software/uutf  
Contact: Daniel BÃ¼nzli `<daniel.buenzl i@erratique.ch>`"""
  maintainer: "Daniel BÃ¼nzli <daniel.buenzl i@erratique.ch>"
  authors: "The uutf programmers"
  license: "ISC"
  tags: ["unicode" "text" "utf-8" "utf-16" "codec" "org:erratique"]
  homepage: "https://erratique.ch/software/uutf"
  doc: "https://erratique.ch/software/uutf/doc/"
  bug-reports: "https://github.com/dbuenzli/uutf/issues"
  depends: [
    "ocaml" {>= "4.03.0"}
    "ocamlfind" {build}
    "ocamlbuild" {build}
    "topkg" {build & >= "1.0.3"}
  ]
  depopts: ["cmdliner"]
  conflicts: [
    "cmdliner" {< "0.9.8"}
  ]
  build: [
    "ocaml"
    "pkg/pkg.ml"
    "build"
    "--dev-pkg"
    "%{dev}%"
    "--with-cmdliner"
    "%{cmdliner:installed}%"
  ]
  dev-repo: "git+https://erratique.ch/repos/uutf.git"
  url {
    src: "https://erratique.ch/software/uutf/releases/uutf-1.0.3.tbz"
    checksum:
      "sha512=50cc4486021da46fb08156e9daec0d57b4ca469b07309c508d5a9a41e9dbcf1f32dec2ed7be027326544453dcaf9c2534919395fd826dc7768efc6cc4bfcc9f8"
  }
}
package "xdg" {
  opam-version: "2.0"
  version: "3.7"
  synopsis: "XDG Base Directory Specification"
  description:
    "https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html"
  maintainer: "Jane Street Group, LLC <opensource@janestreet.com>"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  doc: "https://dune.readthedocs.io/"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "dune" {>= "3.5"}
    "ocaml" {>= "4.08"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    ["rm" "-rf" "vendor/csexp"]
    ["rm" "-rf" "vendor/pp"]
    ["dune" "build" "-p" name "-j" jobs "@install" "@doc" {with-doc}]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src: "git+https://github.com/voodoos/dune.git#ed121652"
  }
}
package "yojson" {
  opam-version: "2.0"
  version: "2.1.0"
  synopsis:
    "Yojson is an optimized parsing and printing library for the JSON format"
  description: """\
Yojson is an optimized parsing and printing library for the JSON format.

ydump is a pretty-printing command-line program provided with the
yojson package."""
  maintainer: [
    "paul-elliot@tarides.com" "nathan@tarides.com" "marek@tarides.com"
  ]
  authors: "Martin Jambon"
  license: "BSD-3-Clause"
  homepage: "https://github.com/ocaml-community/yojson"
  doc: "https://ocaml-community.github.io/yojson"
  bug-reports: "https://github.com/ocaml-community/yojson/issues"
  depends: [
    "dune" {>= "2.7"}
    "ocaml" {>= "4.02.3"}
    "cppo" {build}
    "alcotest" {with-test & >= "0.8.5"}
    "seq" {>= "0.2.2"}
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-community/yojson.git"
  url {
    src:
      "https://github.com/ocaml-community/yojson/releases/download/2.1.0/yojson-2.1.0.tbz"
    checksum: [
      "sha256=9fcb1ff2db58ab259f9228796b0ada4794eae97177b1833371380c4e4f90b15d"
      "sha512=31ab8580e0e4e8a05459fbec2fb9424a3df4cf5aef6df21fc577dbe3d32e81103a632c6a511c4dcf1f51819e88b38d2ce7d6888545bc3f359e69e070f8d2e69c"
    ]
  }
  x-commit-hash: "42fa0887cb870bdbd1751d98cd23f99d6b29751d"
}
